package main

type Mode int
type Submode int

const (
	AM_MODE Mode = iota
	ARDOP_MODE
	ATV_MODE
	C4FM_MODE
	CHIP_MODE
	CLO_MODE
	CONTESTI_MODE
	CW_MODE
	DIGITALVOICE_MODE
	DOMINO_MODE
	DSTAR_MODE
	FAX_MODE
	FM_MODE
	FSK441_MODE
	FT8_MODE
	HELL_MODE
	ISCAT_MODE
	JT4_MODE
	JT6M_MODE
	JT9_MODE
	JT44_MODE
	JT65_MODE
	MFSK_MODE
	MSK144_MODE
	MT63_MODE
	OLIVIA_MODE
	OPERA_MODE
	PAC_MODE
	PAX_MODE
	PKT_MODE
	PSK_MODE
	Q15_MODE
	QRA64_MODE
	ROS_MODE
	RTTY_MODE
	RTTYM_MODE
	SSB_MODE
	SSTV_MODE
	T10_MODE
	THOR_MODE
	THRB_MODE
	TOR_MODE
	V4_MODE
	VOI_MODE
	WINMOR_MODE
	WSPR_MODE
	AMTORFEC_MODE
	ASCI_MODE
	CHIP64_MODE
	CHIP128_MODE
	DOMINOF_MODE
	FMEELL_MODE
	FSK31_MODE
	GTOR_MODE
	HELL80_MODE
	HFSK_MODE
	JT4A_MODE
	JT4B_MODE
	JT4C_MODE
	JT4D_MODE
	JT4E_MODE
	JT4F_MODE
	JT4G_MODE
	JT65A_MODE
	JT65B_MODE
	JT65C_MODE
	MFSK8_MODE
	MFSK16_MODE
	PAC2_MODE
	PAC3_MODE
	PAX2_MODE
	PCW_MODE
	PSK10_MODE
	PSK31_MODE
	PSK63_MODE
	PSK63F_MODE
	PSK125_MODE
	PSKAM10_MODE
	PSKAM31_MODE
	PSKAM50_MODE
	PSKFEC31_MODE
	PSKHELL_MODE
	QPSK31_MODE
	QPSK63_MODE
	QPSK125_MODE
	THRBX_MODE
)

func (m *Mode) String() string {
	return [...]string{
		"AM",
		"ARDOP",
		"ATV",
		"C4FM",
		"CHIP",
		"CLO",
		"CONTESTI",
		"CW",
		"DIGITALVOICE",
		"DOMINO",
		"DSTAR",
		"FAX",
		"FM",
		"FSK441",
		"FT8",
		"HELL",
		"ISCAT",
		"JT4",
		"JT6M",
		"JT9",
		"JT44",
		"JT65",
		"MFSK",
		"MSK144",
		"MT63",
		"OLIVIA",
		"OPERA",
		"PAC",
		"PAX",
		"PKT",
		"PSK",
		"Q15",
		"QRA64",
		"ROS",
		"RTTY",
		"RTTYM",
		"SSB",
		"SSTV",
		"T10",
		"THOR",
		"THRB",
		"TOR",
		"V4",
		"DIGITALVOICE",
		"WINMOR",
		"WSPR",
		"AMTORFEC",
		"ASCI",
		"CHIP64",
		"CHIP128",
		"DOMINOF",
		"FMEELL",
		"FSK31",
		"GTOR",
		"HELL80",
		"HFSK",
		"JT4A",
		"JT4B",
		"JT4C",
		"JT4D",
		"JT4E",
		"JT4F",
		"JT4G",
		"JT65A",
		"JT65B",
		"JT65C",
		"MFSK8",
		"MFSK16",
		"PAC2",
		"PAC3",
		"PAX2",
		"PCW",
		"PSK10",
		"PSK31",
		"PSK63",
		"PSK63F",
		"PSK125",
		"PSKAM10",
		"PSKAM31",
		"PSKAM50",
		"PSKFEC31",
		"PSKHELL",
		"QPSK31",
		"QPSK63",
		"QPSK125",
		"THRBX",
	}[*m]
}

func (m *Mode) isImportOnly() bool {
	return (*m > WSPR_MODE)
}

const (
	AMTORFEC_SUBMODE Submode = iota
	ASCI_SUBMODE
	CHIP64_SUBMODE
	CHIP128_SUBMODE
	DOMINOEX_SUBMODE
	DOMINOF_SUBMODE
	FMHELL_SUBMODE
	FSK31_SUBMODE
	FSKHELL_SUBMODE
	FSQCALL_SUBMODE
	FST4_SUBMODE
	FT4_SUBMODE
	GTOR_SUBMODE
	HELL80_SUBMODE
	HFSK_SUBMODE
	ISCAT_A_SUBMODE
	ISCAT_B_SUBMODE
	JS8_SUBMODE
	JT4A_SUBMODE
	JT4B_SUBMODE
	JT4C_SUBMODE
	JT4D_SUBMODE
	JT4E_SUBMODE
	JT4F_SUBMODE
	JT4G_SUBMODE
	JT9_1_SUBMODE
	JT9_2_SUBMODE
	JT9_5_SUBMODE
	JT9_10_SUBMODE
	JT9_30_SUBMODE
	JT9A_SUBMODE
	JT9B_SUBMODE
	JT9C_SUBMODE
	JT9D_SUBMODE
	JT9E_SUBMODE
	JT9E_FAST_SUBMODE
	JT9F_SUBMODE
	JT9F_FAST_SUBMODE
	JT9G_SUBMODE
	JT9G_FAST_SUBMODE
	JT9H_SUBMODE
	JT9H_FAST_SUBMODE
	JT65A_SUBMODE
	JT65B_SUBMODE
	JT65B2_SUBMODE
	JT65C_SUBMODE
	JT65C2_SUBMODE
	LSB_SUBMODE
	MFSK4_SUBMODE
	MFSK8_SUBMODE
	MFSK11_SUBMODE
	MFSK16_SUBMODE
	MFSK22_SUBMODE
	MFSK31_SUBMODE
	MFSK32_SUBMODE
	MFSK64_SUBMODE
	MFSK128_SUBMODE
	OLIVIA_4_125_SUBMODE
	OLIVIA_4_250_SUBMODE
	OLIVIA_8_250_SUBMODE
	OLIVIA_8_500_SUBMODE
	OLIVIA_16_500_SUBMODE
	OLIVIA_16_1000_SUBMODE
	OLIVIA_32_1000_SUBMODE
	OPERA_BEACON_SUBMODE
	OPERA_QSO_SUBMODE
	PAC2_SUBMODE
	PAC3_SUBMODE
	PAC4_SUBMODE
	PAX2_SUBMODE
	PCW_SUBMODE
	PSK10_SUBMODE
	PSK31_SUBMODE
	PSK63_SUBMODE
	PSK63F_SUBMODE
	PSK125_SUBMODE
	PSK250_SUBMODE
	PSK500_SUBMODE
	PSK1000_SUBMODE
	PSKAM10_SUBMODE
	PSKAM31_SUBMODE
	PSKAM50_SUBMODE
	PSKFEC31_SUBMODE
	PSKHELL_SUBMODE
	QPSK31_SUBMODE
	QPSK63_SUBMODE
	QPSK125_SUBMODE
	QPSK250_SUBMODE
	QPSK500_SUBMODE
	QRA64A_SUBMODE
	QRA64B_SUBMODE
	QRA64C_SUBMODE
	QRA64D_SUBMODE
	QRA64E_SUBMODE
	ROS_EME_SUBMODE
	ROS_HF_SUBMODE
	ROS_MF_SUBMODE
	SIM31_SUBMODE
	THRBX_SUBMODE
	USB_SUBMODE
)

func (s *Submode) String() string {
	return [...]string{
		"AMTORFEC",
		"ASCI",
		"CHIP64",
		"CHIP128",
		"DOMINOEX",
		"DOMINOF",
		"FMHELL",
		"FSK31",
		"FSKHELL",
		"FSQCALL",
		"FST4",
		"FT4",
		"GTOR",
		"HELL80",
		"HFSK",
		"ISCAT-A",
		"ISCAT-B",
		"JS8",
		"JT4A",
		"JT4B",
		"JT4C",
		"JT4D",
		"JT4E",
		"JT4F",
		"JT4G",
		"JT9-1",
		"JT9-2",
		"JT9-5",
		"JT9-10",
		"JT9-30",
		"JT9A",
		"JT9B",
		"JT9C",
		"JT9D",
		"JT9E",
		"JT9E FAST",
		"JT9F",
		"JT9F FAST",
		"JT9G",
		"JT9G FAST",
		"JT9H",
		"JT9H FAST",
		"JT65A",
		"JT65B",
		"JT65B2",
		"JT65C",
		"JT65C2",
		"LSB",
		"MFSK4",
		"MFSK8",
		"MFSK11",
		"MFSK16",
		"MFSK22",
		"MFSK31",
		"MFSK32",
		"MFSK64",
		"MFSK128",
		"OLIVIA 4/125",
		"OLIVIA 4/250",
		"OLIVIA 8/250",
		"OLIVIA 8/500",
		"OLIVIA 16/500",
		"OLIVIA 16/1000",
		"OLIVIA 32/1000",
		"OPERA-BEACON",
		"OPERA-QSO",
		"PAC2",
		"PAC3",
		"PAC4",
		"PAX2",
		"PCW",
		"PSK10",
		"PSK31",
		"PSK63",
		"PSK63F",
		"PSK125",
		"PSK250",
		"PSK500",
		"PSK1000",
		"PSKAM10",
		"PSKAM31",
		"PSKAM50",
		"PSKFEC31",
		"PSKHELL",
		"QPSK31",
		"QPSK63",
		"QPSK125",
		"QPSK250",
		"QPSK500",
		"QRA64A",
		"QRA64B",
		"QRA64C",
		"QRA64D",
		"QRA64E",
		"ROS-EME",
		"ROS-HF",
		"ROS-MF",
		"SIM31",
		"THRBX",
		"USB",
	}[*s]
}

func (m *Mode) Submodes() []Submode {
	s := []Submode{}
	switch *m {
	case CHIP_MODE:
		s = []Submode{
			CHIP64_SUBMODE,
			CHIP128_SUBMODE,
		}
	case CW_MODE:
		s = []Submode{
			PCW_SUBMODE,
		}
	case DOMINO_MODE:
		s = []Submode{
			DOMINOF_SUBMODE,
			DOMINOEX_SUBMODE,
		}
	case HELL_MODE:
		s = []Submode{
			FMHELL_SUBMODE,
			FSKHELL_SUBMODE,
			HELL80_SUBMODE,
			HFSK_SUBMODE,
			PSKHELL_SUBMODE,
		}
	case ISCAT_MODE:
		s = []Submode{
			ISCAT_A_SUBMODE,
			ISCAT_B_SUBMODE,
		}
	case JT4_MODE:
		s = []Submode{
			JT4A_SUBMODE,
			JT4B_SUBMODE,
			JT4C_SUBMODE,
			JT4D_SUBMODE,
			JT4E_SUBMODE,
			JT4F_SUBMODE,
			JT4G_SUBMODE,
		}
	case JT9_MODE:
		s = []Submode{
			JT9_1_SUBMODE,
			JT9_2_SUBMODE,
			JT9_5_SUBMODE,
			JT9_10_SUBMODE,
			JT9_30_SUBMODE,
			JT9A_SUBMODE,
			JT9B_SUBMODE,
			JT9C_SUBMODE,
			JT9D_SUBMODE,
			JT9E_SUBMODE,
			JT9E_FAST_SUBMODE,
			JT9F_SUBMODE,
			JT9F_FAST_SUBMODE,
			JT9G_SUBMODE,
			JT9G_FAST_SUBMODE,
			JT9H_SUBMODE,
			JT9H_FAST_SUBMODE,
		}
	case JT65_MODE:
		s = []Submode{
			JT65A_SUBMODE,
			JT65B_SUBMODE,
			JT65B2_SUBMODE,
			JT65C_SUBMODE,
			JT65C2_SUBMODE,
		}
	case MFSK_MODE:
		s = []Submode{
			FSQCALL_SUBMODE,
			FST4_SUBMODE,
			FT4_SUBMODE,
			JS8_SUBMODE,
			MFSK4_SUBMODE,
			MFSK8_SUBMODE,
			MFSK11_SUBMODE,
			MFSK16_SUBMODE,
			MFSK22_SUBMODE,
			MFSK31_SUBMODE,
			MFSK32_SUBMODE,
			MFSK64_SUBMODE,
			MFSK128_SUBMODE,
		}
	case OLIVIA_MODE:
		s = []Submode{
			OLIVIA_4_125_SUBMODE,
			OLIVIA_4_250_SUBMODE,
			OLIVIA_8_250_SUBMODE,
			OLIVIA_8_500_SUBMODE,
			OLIVIA_16_500_SUBMODE,
			OLIVIA_16_1000_SUBMODE,
			OLIVIA_32_1000_SUBMODE,
		}
	case OPERA_MODE:
		s = []Submode{
			OPERA_BEACON_SUBMODE,
			OPERA_QSO_SUBMODE,
		}
	case PAC_MODE:
		s = []Submode{
			PAC2_SUBMODE,
			PAC3_SUBMODE,
			PAC4_SUBMODE,
		}
	case PAX_MODE:
		s = []Submode{
			PAX2_SUBMODE,
		}
	case PSK_MODE:
		s = []Submode{
			FSK31_SUBMODE,
			PSK10_SUBMODE,
			PSK31_SUBMODE,
			PSK63_SUBMODE,
			PSK63F_SUBMODE,
			PSK125_SUBMODE,
			PSK250_SUBMODE,
			PSK500_SUBMODE,
			PSK1000_SUBMODE,
			PSKAM10_SUBMODE,
			PSKAM31_SUBMODE,
			PSKAM50_SUBMODE,
			PSKFEC31_SUBMODE,
			QPSK31_SUBMODE,
			QPSK63_SUBMODE,
			QPSK125_SUBMODE,
			QPSK250_SUBMODE,
			QPSK500_SUBMODE,
			SIM31_SUBMODE,
		}
	case QRA64_MODE:
		s = []Submode{
			QRA64A_SUBMODE,
			QRA64B_SUBMODE,
			QRA64C_SUBMODE,
			QRA64D_SUBMODE,
			QRA64E_SUBMODE,
		}
	case ROS_MODE:
		s = []Submode{
			ROS_EME_SUBMODE,
			ROS_HF_SUBMODE,
			ROS_MF_SUBMODE,
		}
	case RTTY_MODE:
		s = []Submode{
			ASCI_SUBMODE,
		}
	case SSB_MODE:
		s = []Submode{
			LSB_SUBMODE,
			USB_SUBMODE,
		}
	case THRB_MODE:
		s = []Submode{
			THRBX_SUBMODE,
		}
	case TOR_MODE:
		s = []Submode{
			AMTORFEC_SUBMODE,
			GTOR_SUBMODE,
		}
	}
	return s
}
